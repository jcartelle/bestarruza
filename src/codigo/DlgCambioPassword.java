/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package codigo;

import java.awt.Color;
import java.awt.Image;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author bea
 */
public class DlgCambioPassword extends javax.swing.JDialog {
//Establecemos color de fondo
        Color fondo= new Color(222, 237, 215 );
        
        String miembroJunta_recuperado="";
        
        
    /**
     * Creates new form DlgCambioContraseña
     */
    public DlgCambioPassword(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public DlgCambioPassword(javax.swing.JDialog parent, boolean modal, String miembroJunta_recu) {
        super(parent, modal);
        initComponents();
                 //Pinta el formulario
        this.getContentPane().setBackground(fondo);
        miembroJunta_recuperado = miembroJunta_recu;
//        
//        Poner el icono del logo en la barra
         Image imagen = new ImageIcon(getClass().getResource("/imagenes/Logo.png")).getImage();
         this.setIconImage(imagen);
         
                 //Centramos la ventana
        this.setLocationRelativeTo(null);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblContraseñaActual = new javax.swing.JLabel();
        lblNuevaContraseña = new javax.swing.JLabel();
        lblConfirmarContraseña = new javax.swing.JLabel();
        pswActual = new javax.swing.JPasswordField();
        pswNueva = new javax.swing.JPasswordField();
        pswConfirmar = new javax.swing.JPasswordField();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CAMBIAR CONTRASEÑA");
        setMinimumSize(null);
        setPreferredSize(new java.awt.Dimension(500, 400));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        lblContraseñaActual.setText("CONTRASEÑA ACTUAL");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(50, 50, 0, 10);
        getContentPane().add(lblContraseñaActual, gridBagConstraints);

        lblNuevaContraseña.setText("NUEVA CONTRASEÑA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 0, 10);
        getContentPane().add(lblNuevaContraseña, gridBagConstraints);

        lblConfirmarContraseña.setText("CONFIRMAR CONTRASEÑA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 0, 10);
        getContentPane().add(lblConfirmarContraseña, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 50);
        getContentPane().add(pswActual, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 50);
        getContentPane().add(pswNueva, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 50);
        getContentPane().add(pswConfirmar, gridBagConstraints);

        btnGuardar.setText("GUARDAR");
        btnGuardar.setMaximumSize(new java.awt.Dimension(109, 35));
        btnGuardar.setMinimumSize(new java.awt.Dimension(109, 35));
        btnGuardar.setPreferredSize(new java.awt.Dimension(109, 35));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 50, 10, 50);
        getContentPane().add(btnGuardar, gridBagConstraints);

        btnCancelar.setText("CANCELAR");
        btnCancelar.setMaximumSize(new java.awt.Dimension(109, 35));
        btnCancelar.setMinimumSize(new java.awt.Dimension(109, 35));
        btnCancelar.setPreferredSize(new java.awt.Dimension(109, 35));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 50, 50);
        getContentPane().add(btnCancelar, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        String passwordActual = pswActual.getText();
        String passwordNueva = pswNueva.getText();
        String passwordConfirmar = pswConfirmar.getText();
        
        try{
            if(passwordActual.isEmpty()){
                JOptionPane.showMessageDialog(this, "Debe indicar la contraseña actual");
                return;
            }
            if(passwordNueva.isEmpty()){
                JOptionPane.showMessageDialog(this, "Debe indicar la nueva contraseña");
                return;
            }
            if(passwordConfirmar.isEmpty()){
                JOptionPane.showMessageDialog(this, "Debe confirmar la nueva contraseña");
                return;
            }
            
            if(!passwordNueva.equals(passwordConfirmar)){
                JOptionPane.showMessageDialog(this, "Las contraseñas no coinciden");
                return;
            } else if(comprobarPassword(miembroJunta_recuperado, Encriptado.encriptar(passwordActual))){
                JOptionPane.showMessageDialog(this, "Contraseña actual incorrecta");
                return;
            } else{
                String consulta = "{call cambiar_contraseña (?, ?)}";
                CallableStatement llamada = (CallableStatement) Conexion.getConexion().prepareCall(consulta);
                llamada.setString(1, Encriptado.encriptar(passwordNueva)); //Primera ? de la consulta
                llamada.setString(2, miembroJunta_recuperado);
                
                llamada.executeUpdate();
                llamada.close();
                JOptionPane.showMessageDialog(this, "Contraseña modificada correctamente");
                dispose();
            }
            
        } catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Error modificando contraseña");
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private boolean comprobarPassword(String miembroJunta, String passwordActual) {
        String usuario_app = "";
        String password = "";

        try {
            Statement statement = Conexion.getConexion().createStatement();
            String consulta = "SELECT CONTRASEÑA from JUNTA_DIRECTIVA WHERE USUARIO_APP='" + miembroJunta + "'";
            System.out.println(consulta); //Imprime por pantalla la consulta para ver posibles errores
            ResultSet resultSet = statement.executeQuery(consulta); //Ejecuta la consulta
            while (resultSet.next()) {
                password = resultSet.getString(1);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error recuperando datos");
        }
        
        if (!password.equals(passwordActual)) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgCambioPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgCambioPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgCambioPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgCambioPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgCambioPassword dialog = new DlgCambioPassword(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel lblConfirmarContraseña;
    private javax.swing.JLabel lblContraseñaActual;
    private javax.swing.JLabel lblNuevaContraseña;
    private javax.swing.JPasswordField pswActual;
    private javax.swing.JPasswordField pswConfirmar;
    private javax.swing.JPasswordField pswNueva;
    // End of variables declaration//GEN-END:variables
}
